from app.services.sync_service.base_sync_service import BaseSyncService
from app.services.sync_service.external_services import get_teachers_external
from app.services.sync_service.schemas.sync_schemas import TeacherResponse, SyncStats
from sqlalchemy.orm import Session
from app.database.models import User, Role


class TeacherSyncService(BaseSyncService[TeacherResponse]):
    """–°–µ—Ä–≤–∏—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —É—á–∏—Ç–µ–ª–µ–π"""

    def __init__(self):
        super().__init__("teacher")

    def sync_teachers(self, db: Session) -> SyncStats:
        """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —É—á–∏—Ç–µ–ª–µ–π"""
        teachers = get_teachers_external()
        print(f"üë®‚Äçüè´ –ù–∞–π–¥–µ–Ω–æ —É—á–∏—Ç–µ–ª–µ–π: {len(teachers)}")
        return self.sync(db, teachers)

    def _should_update_email(self, user: User, teacher: TeacherResponse) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å email —É—á–∏—Ç–µ–ª—è"""
        # –í –±–∞–∑–æ–≤–æ–º –∫–ª–∞—Å—Å–µ —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è email_mapping, —Ç–∞–∫ —á—Ç–æ –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º True
        return True

    def _get_item_email(self, teacher: TeacherResponse) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç email —É—á–∏—Ç–µ–ª—è"""
        if not teacher.email:
            raise ValueError("–£ —É—á–∏—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç email")
        return teacher.email

    def _update_specific_fields(self, user: User, teacher: TeacherResponse) -> bool:
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –ø–æ–ª–µ–π —É—á–∏—Ç–µ–ª—è"""
        has_changes = False

        if teacher.image != user.image:
            user.image = teacher.image
            has_changes = True
            print(f"üñºÔ∏è  –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ: {user.display_name}")

        if teacher.leader_groups != user.groups_leader:
            user.groups_leader = teacher.leader_groups
            has_changes = True
            print(f"üë• –ò–∑–º–µ–Ω–µ–Ω—ã –∫–ª–∞—Å—Å—ã —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞: {user.display_name} -> {teacher.leader_groups}")

        return has_changes

    def _get_specific_fields(self, teacher: TeacherResponse) -> dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –ø–æ–ª–µ–π –¥–ª—è –Ω–æ–≤–æ–≥–æ —É—á–∏—Ç–µ–ª—è"""
        return {
            'image': teacher.image,
            'groups_leader': teacher.leader_groups
        }

    # –£–ë–†–ê–¢–¨ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π _process_single_item - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∞–∑–æ–≤—ã–π