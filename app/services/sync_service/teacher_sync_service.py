from app.services.sync_service.base_sync_service import BaseSyncService
from app.services.sync_service.external_services import get_teachers_external
from app.services.sync_service.schemas.sync_schemas import TeacherResponse, SyncStats
from sqlalchemy.orm import Session
from app.database.models import User, Role


class TeacherSyncService(BaseSyncService[TeacherResponse]):
    """–°–µ—Ä–≤–∏—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —É—á–∏—Ç–µ–ª–µ–π"""

    def __init__(self):
        super().__init__("teacher")

    def sync_teachers(self, db: Session) -> SyncStats:
        """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —É—á–∏—Ç–µ–ª–µ–π"""
        teachers = get_teachers_external()
        print(f"üë®‚Äçüè´ –ù–∞–π–¥–µ–Ω–æ —É—á–∏—Ç–µ–ª–µ–π: {len(teachers)}")
        return self.sync(db, teachers)

    def _should_update_email(self, user: User, teacher: TeacherResponse) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å email —É—á–∏—Ç–µ–ª—è"""
        return teacher.email and user.email != teacher.email

    def _get_item_email(self, teacher: TeacherResponse) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç email —É—á–∏—Ç–µ–ª—è"""
        if not teacher.email:
            raise ValueError("–£ —É—á–∏—Ç–µ–ª—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç email")
        return teacher.email

    def _update_specific_fields(self, user: User, teacher: TeacherResponse) -> bool:
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –ø–æ–ª–µ–π —É—á–∏—Ç–µ–ª—è"""
        has_changes = False

        if teacher.image != user.image:
            user.image = teacher.image
            has_changes = True
            print(f"üñºÔ∏è  –û–±–Ω–æ–≤–ª–µ–Ω–æ —Ñ–æ—Ç–æ: {user.display_name}")

        if teacher.leader_groups != user.groups_leader:
            user.groups_leader = teacher.leader_groups
            has_changes = True
            print(f"üë• –ò–∑–º–µ–Ω–µ–Ω—ã –∫–ª–∞—Å—Å—ã —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞: {user.display_name} -> {teacher.leader_groups}")

        return has_changes

    def _get_specific_fields(self, teacher: TeacherResponse) -> dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –ø–æ–ª–µ–π –¥–ª—è –Ω–æ–≤–æ–≥–æ —É—á–∏—Ç–µ–ª—è"""
        return {
            'image': teacher.image,
            'groups_leader': teacher.leader_groups
        }

    def _process_single_item(self, db: Session, teacher: TeacherResponse, role: Role, stats: SyncStats):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–Ω–æ–≥–æ —É—á–∏—Ç–µ–ª—è —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
        try:
            existing_user = db.query(User).filter(User.external_id == teacher.uid).first()

            if existing_user:
                if self._update_item(existing_user, teacher, role):
                    stats.updated += 1

                    # –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è —É—á–∏—Ç–µ–ª–µ–π
                    if teacher.email and teacher.email != existing_user.email:
                        print(f"üìß –û–±–Ω–æ–≤–ª–µ–Ω email —É—á–∏—Ç–µ–ª—è: {teacher.display_name} -> {teacher.email}")
                    else:
                        print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω —É—á–∏—Ç–µ–ª—å: {teacher.display_name}")
            else:
                self._add_item(db, teacher, role)
                stats.added += 1
                db.commit()
                print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω —É—á–∏—Ç–µ–ª—å: {teacher.display_name} ({teacher.email})")

        except Exception as e:
            stats.errors.append(f"{teacher.display_name}: {str(e)}")
            print(f"‚ùå –û—à–∏–±–∫–∞ —É—á–∏—Ç–µ–ª—è: {teacher.display_name} - {e}")