import datetime
from typing import List
from sqlalchemy.orm import Session
from app.services.sync_service.schemas.sync_schemas import StudentResponse, SyncStats
from app.services.sync_service.base_sync_service import BaseSyncService
from app.services.sync_service.external_services import get_students_external
from app.auth.utils import get_password_hash
from app.database.models import User, Role


class StudentSyncService(BaseSyncService[StudentResponse]):
    """–°–µ—Ä–≤–∏—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —É—á–µ–Ω–∏–∫–æ–≤"""

    def __init__(self):
        super().__init__("student")

    def sync_students(self, db: Session) -> SyncStats:
        """–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —É—á–µ–Ω–∏–∫–æ–≤"""
        students = get_students_external()
        print(f"üë®‚Äçüéì –ù–∞–π–¥–µ–Ω–æ —É—á–µ–Ω–∏–∫–æ–≤: {len(students)}")
        return self.sync(db, students)

    def _should_update_email(self, user: User, student: StudentResponse) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å email —É—á–µ–Ω–∏–∫–∞"""
        # –í –±–∞–∑–æ–≤–æ–º –∫–ª–∞—Å—Å–µ —Ç–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è email_mapping, —Ç–∞–∫ —á—Ç–æ –≤—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º True
        # —á—Ç–æ–±—ã email –æ–±–Ω–æ–≤–ª—è–ª—Å—è —Å–æ–≥–ª–∞—Å–Ω–æ –º–∞–ø–ø–∏–Ω–≥—É
        return True

    def _get_external_email(self, student: StudentResponse) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç email –∏–∑ –≤–Ω–µ—à–Ω–µ–π –ë–î –∏–ª–∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç"""
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º email –∏–∑ –≤–Ω–µ—à–Ω–µ–π –ë–î –µ—Å–ª–∏ –æ–Ω –≤–∞–ª–∏–¥–Ω—ã–π
        if student.email and student.email.strip() and student.email.lower() != 'none':
            return student.email.strip().lower()

        # –ï—Å–ª–∏ –≤–æ –≤–Ω–µ—à–Ω–µ–π –ë–î –Ω–µ—Ç email, –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –µ–≥–æ
        return self._generate_student_email(student)

    def _get_item_email(self, student: StudentResponse) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç email –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
        return self._get_external_email(student)

    def _generate_student_email(self, student: StudentResponse) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è email –¥–ª—è —É—á–µ–Ω–∏–∫–∞ –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç –≤–æ –≤–Ω–µ—à–Ω–µ–π –ë–î"""
        first_name = (student.first_name or '').strip().lower()
        last_name = (student.last_name or '').strip().lower()

        first_name_clean = ''.join(c for c in first_name if c.isalnum())
        last_name_clean = ''.join(c for c in last_name if c.isalnum())

        if first_name_clean and last_name_clean:
            base_email = f"{first_name_clean}.{last_name_clean}"
        elif first_name_clean:
            base_email = first_name_clean
        elif last_name_clean:
            base_email = last_name_clean
        else:
            base_email = f"student.{student.uid[:8]}"

        return f"{base_email}@school1298.ru"

    def _update_specific_fields(self, user: User, student: StudentResponse) -> bool:
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –ø–æ–ª–µ–π —É—á–µ–Ω–∏–∫–∞"""
        has_changes = False

        if student.group_name and user.group_name != student.group_name:
            user.group_name = student.group_name
            has_changes = True
            print(f"üìö –ò–∑–º–µ–Ω–µ–Ω–∞ –≥—Ä—É–ø–ø–∞: {user.display_name} -> {student.group_name}")

        return has_changes

    def _get_specific_fields(self, student: StudentResponse) -> dict:
        """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã—Ö –ø–æ–ª–µ–π –¥–ª—è –Ω–æ–≤–æ–≥–æ —É—á–µ–Ω–∏–∫–∞"""
        return {
            'group_name': student.group_name,
            'password_hash': get_password_hash("temporary_password_123")
        }

    # –£–ë–†–ê–¢–¨ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π _process_single_item - –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∞–∑–æ–≤—ã–π